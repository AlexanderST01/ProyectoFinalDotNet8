@rendermode InteractiveAuto
@page "/ConsultaMenu"
@inject HttpClient httpClient
@attribute [Authorize]

<div>
    <div class="row justify-content-start ">
        <div class="col-sm-10 col-md-9 col-lg-10 col-xl-xxl-7">
            <div class="card">
                <div class="card-header">
                    <h1>Consulta Menú</h1>
                    <div class="row">
                        <label>Filtrar por</label>
                        <div class="col">
                            <InputSelect class="form-select" @bind-Value="opciones">
                                <option value="0" selected>ID</option>
                                <option value="1">Descripci&oacute;n</option>
                                <option value="2">D&iacuteas de la Semana</option>
                            </InputSelect>
                        </div>
                        <div class="col input-group">
                            <button class="form-control oi oi-magnifying-glass" type="button" @onclick="Buscar"></button>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            @switch (opciones)
                            {
                                case 0:
                                    <InputNumber class="form-control" @bind-Value="MenuAuxiliar.MenuId"></InputNumber>
                                    break;
                                case 1:
                                    <InputText class="form-control" @bind-Value="MenuAuxiliar.Descripcion"></InputText>
                                    break;
                                case 2:
                                    <InputSelect class="form-control" @bind-Value="MenuAuxiliar.DiaSemana">
                                        <option value="Lunes" selected>Lunes</option>
                                        <option value="Martes">Martes</option>
                                        <option value="Miércoles">Miércoles</option>
                                        <option value="Jueves">Jueves</option>
                                        <option value="Viernes">Viernes</option>
                                    </InputSelect>
                                    break;
                            }
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                    <div class="col">
                       <h3>Detalles del Producto</h3>
                       <p>Detalles adicionales del producto.</p>
                    </div>


                     @foreach (var menu in Menus)
                     {
                        <div class="container mt-5">
                            <div class="row">
                                <div class="col-md-6">
                                        @if (menu.Imagen != null)
                                        {
                                            var base64 = Convert.ToBase64String(menu.Imagen);
                                            var imgSrc = $"data:image/jpeg;base64,{base64}";
                                            <img src="@imgSrc" alt="Imagen del producto" class="rounded mx-auto d-block img-fluid" style="max-width: 100px; max-height: 100px; margin: 5px;" />
                                        }
                                </div>
                                <div class="col-md-6">
                                    <h2>@menu.Descripcion</h2>
                                    @foreach(var comida in menu.MenuDetalles)
                                    {
                                            <p class="text-muted">@ObtenerDescripcionComida(comida.ComidaId)</p>
                                    }
                                       
                                    <p>Precio: $99.99</p>
                                    <p>Disponibilidad: En stock</p>
                                    @* <button class="btn btn-primary"Agregar al carrito</button> *@
                                </div>
                            </div>
                            <div class="row mt-5">
                                
                            </div>
                        </div>
                    }




                       @*  <table border="1" class="table table-bordered table-striped">
                            <thead>
                                <tr class="table-secondary">
                                    <th>ID</th>
                                    <th>Descripci&oacute;n</th>
                                    <th>D&iacuteas de la Semana</th>
                                    <th>Imagen</th>
                                    <th>Ver</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var menu in Menus)
                                {
                                    <tr>
                                        <td>@menu.MenuId</td>
                                        <td>@menu.Descripcion</td>
                                        <td>@menu.DiaSemana</td>
                                        <td>
                                            <div class="bg-personal">
                                                @if (menu.Imagen != null)
                                                {
                                                    var base64 = Convert.ToBase64String(menu.Imagen);
                                                    var imgSrc = $"data:image/jpeg;base64,{base64}";
                                                    <img src="@imgSrc" alt="Imagen del producto" class="rounded mx-auto d-block img-fluid" style="max-width: 100px; max-height: 100px; margin: 5px;" />
                                                }
                                            </div>
                                        </td>
                                        <td><a href="RegistroMenu/@menu.MenuId">ver</a></td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <th>
                                    Conteo: @Conteo
                                </th>
                            </tfoot>
                        </table> *@
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public List<Menu> Menus { get; set; } = new List<Menu>();
    public int Conteo = 0;
    public int opciones = 0;
    public Menu MenuAuxiliar = new Menu();
    public List<Comidas> Comidas { get; set; } = new List<Comidas>();

    protected override async Task OnInitializedAsync()
    {
        var comidas = await httpClient.GetFromJsonAsync<List<Comidas>>("api/Comidas") ?? new List<Comidas>();
        Comidas = comidas;
    }

    public async Task Buscar()
    {
        switch (opciones)
        {
            case 0:
                if (MenuAuxiliar.MenuId == 0)
                {
                    Menus = await httpClient.GetFromJsonAsync<List<Menu>>("api/Menus")?? new List<Menu>();
                }
                else
                {
                    Menus = (await httpClient.GetFromJsonAsync<List<Menu>>("api/Menus") ?? new List<Menu>())
                        .Where(m => m.MenuId == MenuAuxiliar.MenuId).ToList();
                }
                break;

            case 1:
                if (string.IsNullOrEmpty(MenuAuxiliar.Descripcion))
                {
                    Menus = await httpClient.GetFromJsonAsync<List<Menu>>("api/Menus") ?? new List<Menu>();
                }
                else
                {
                    Menus = (await httpClient.GetFromJsonAsync<List<Menu>>("api/Menus") ?? new List<Menu>())
                        .Where(m => m.Descripcion!.Contains(MenuAuxiliar.Descripcion, StringComparison.OrdinalIgnoreCase)).ToList();
                }
                break;

            case 2:
                if (string.IsNullOrEmpty(MenuAuxiliar.DiaSemana))
                {
                    Menus = await httpClient.GetFromJsonAsync<List<Menu>>("api/Menus") ?? new List<Menu>();
                }
                else
                {
                    Menus = (await httpClient.GetFromJsonAsync<List<Menu>>("api/Menus") ?? new List<Menu>())
                        .Where(m => m.DiaSemana!.Equals(MenuAuxiliar.DiaSemana, StringComparison.OrdinalIgnoreCase)).ToList();
                }
                break;
        }

        Conteo = Menus != null ? Menus.Count : 0;
    }
    public string ObtenerDescripcionComida(int comidaId)
    {
        var comida = Comidas.FirstOrDefault(c => c.ComidaId == comidaId);
        return comida!.Descripcion;
    }
}