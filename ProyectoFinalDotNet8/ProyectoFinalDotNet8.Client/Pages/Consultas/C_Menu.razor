@rendermode InteractiveAuto
@page "/ConsultaMenu"
@inject HttpClient httpClient
@inject NotificationService notificationService
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "Admin,Director,Empleado")]

<div>
    <div class="row justify-content-start ">
        <div class="col-sm-10 col-md-9 col-lg-10 col-xl-xxl-7">
            <div class="card">
                <div class="card-header">
                    <h1>Consulta Menú</h1>
                    <div class="row">
                        <label>Filtrar por</label>
                        <div class="col">
                            <InputSelect class="form-select" @bind-Value="opciones">
                                <option value="0" selected>ID</option>
                                <option value="1">Descripci&oacute;n</option>
                                <option value="2">D&iacuteas de la Semana</option>
                            </InputSelect>
                        </div>
                        <div class="col input-group">
                            <button class="form-control btn btn-primary" type="button" @onclick="Buscar"><i class="bi bi-search"></i></button>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            @switch (opciones)
                            {
                                case 0:
                                    <InputNumber class="form-control" @bind-Value="MenuAuxiliar.MenuId"></InputNumber>
                                    break;
                                case 1:
                                    <InputText class="form-control" @bind-Value="MenuAuxiliar.Descripcion"></InputText>
                                    break;
                                case 2:
                                    <InputSelect class="form-control" @bind-Value="MenuAuxiliar.DiaSemana">
                                        <option value="Lunes" selected>Lunes</option>
                                        <option value="Martes">Martes</option>
                                        <option value="Miércoles">Miércoles</option>
                                        <option value="Jueves">Jueves</option>
                                        <option value="Viernes">Viernes</option>
                                    </InputSelect>
                                    break;
                            }
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                    <div class="col">
                       <h3>Listados de men&uacute;</h3>
                     
                    </div>
                    
                     @foreach (var menu in Menus)
                     {
                            <div class="card">
                        <div class="container mt-5">
                            <div class="row">
                                <div class="col-md-6">
                                        @if (menu.Imagen != null)
                                        {
                                            var base64 = Convert.ToBase64String(menu.Imagen);
                                            var imgSrc = $"data:image/jpeg;base64,{base64}";
                                            <img src="@imgSrc" alt="Imagen del producto" class="rounded mx-auto d-block img-fluid" style="max-width: 300px; max-height: 300px; margin: 5px;" />
                                        }
                                </div>
                                <div class="col-md-6">
                                    <h2>@menu.Descripcion</h2>
                                    <strong>Descripc&iacute;on:</strong>
                                    @foreach(var comida in menu.MenuDetalles)
                                    {
                                        <p class="text-muted">@ObtenerDescripcionComida(comida.ComidaId)</p>
                                    }       
                                        <p><strong>D&iacute;a de la semana:</strong> @menu.DiaSemana</p>                                       
                                        <strong> Nota promedio: </strong>
                                            @if(menu.ComenentarioDetalle.Count > 0)
                                            {
                                                @for (int i = 0; i < 5; i++)
                                                {
                                                    if (i < menu.ComenentarioDetalle.Average(c => c.Nota))
                                                    {
                                                        <i class="bi bi-star-fill text-warning"></i>

                                                    }
                                                    else
                                                    {
                                                        <i class="bi bi-star text-warning"></i>
                                                    }

                                                }
                                            }
                                           
                                        @* @if (menu.ComenentarioDetalle.Count > 0)
                                        @for (int i = 0; i < 4 - (menu.ComenentarioDetalle.Average(c => c.Nota)); i++)
                                        {
                                                <i class="bi bi-star text-warning"></i>
                                        } *@
                                        <br />
                                        @* <button class="btn btn-primary" href="RegistroComida/@tabla.ComidaId">Editar</button> *@
                                            <a href="Comentarios/@menu.MenuId" class="btn btn-success btn-lg active" data-mdb-ripple-init role="button" aria-pressed="true">Comentar</a>
                                            <a href="RegistroMenu/@menu.MenuId"class="btn btn-primary btn-lg active" data-mdb-ripple-init role="button" aria-pressed="true">Editar</a>
                                            @* <button type="button" @onclick="(() => IrRegistroMenu(menu.MenuId))"  class="btn btn-primary">Editar</button>
                                            <button type="button" @onclick="(() => IrComentarios(menu.MenuId))" class="btn btn-success">Comentar</button> *@
                                        @* <a href="/RegistroMenu/@menu.MenuId"><button type="button" class="btn btn-primary"><i class="oi oi-plus"> Editar</i></button></a>
                                        <a href="/Comentarios/@menu.MenuId"><button type="button" class="btn btn-warning"><i class="oi oi-plus"> Comentar</i></button></a> *@

                                          

                                </div> 
                            </div>
                            <div class="row mt-5">
                                
                            </div>
                        </div>
                            </div>

                    }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public List<Menu> Menus { get; set; } = new List<Menu>();
    public int Conteo = 0;
    public int opciones = 0;
    public Menu MenuAuxiliar = new Menu();
    public List<Comentarios> Comentarios { get; set; } = new List<Comentarios>();
    public List<Comidas> Comidas { get; set; } = new List<Comidas>();

    protected override async Task OnInitializedAsync()
    {
        var comidas = await httpClient.GetFromJsonAsync<List<Comidas>>("api/Comidas") ?? new List<Comidas>();
        Comidas = comidas;
        var comentarios = await httpClient.GetFromJsonAsync<List<Comentarios>>("api/menus/Comentarios") ?? new List<Comentarios>();
        Comentarios = comentarios;
        Menus = await httpClient.GetFromJsonAsync<List<Menu>>("api/Menus") ?? new List<Menu>();
        
    }

    public async Task Buscar()
    {
        switch (opciones)
        {
            case 0:
                if (MenuAuxiliar.MenuId == 0)
                {
                    Menus = await httpClient.GetFromJsonAsync<List<Menu>>("api/Menus")?? new List<Menu>();
                }
                else
                {
                    Menus = (await httpClient.GetFromJsonAsync<List<Menu>>("api/Menus") ?? new List<Menu>())
                        .Where(m => m.MenuId == MenuAuxiliar.MenuId).ToList();
                }
                break;

            case 1:
                if (string.IsNullOrEmpty(MenuAuxiliar.Descripcion))
                {
                    Menus = await httpClient.GetFromJsonAsync<List<Menu>>("api/Menus") ?? new List<Menu>();
                }
                else
                {
                    Menus = (await httpClient.GetFromJsonAsync<List<Menu>>("api/Menus") ?? new List<Menu>())
                        .Where(m => m.Descripcion!.Contains(MenuAuxiliar.Descripcion, StringComparison.OrdinalIgnoreCase)).ToList();
                }
                break;

            case 2:
                if (string.IsNullOrEmpty(MenuAuxiliar.DiaSemana))
                {
                    Menus = await httpClient.GetFromJsonAsync<List<Menu>>("api/Menus") ?? new List<Menu>();
                }
                else
                {
                    Menus = (await httpClient.GetFromJsonAsync<List<Menu>>("api/Menus") ?? new List<Menu>())
                        .Where(m => m.DiaSemana!.Equals(MenuAuxiliar.DiaSemana, StringComparison.OrdinalIgnoreCase)).ToList();
                }
                break;
        }

        Conteo = Menus != null ? Menus.Count : 0;
    }
    public string? ObtenerDescripcionComida(int comidaId)
    {
        var comida = Comidas.FirstOrDefault(c => c.ComidaId == comidaId);
        return comida?.Descripcion!;
    }
    public void IrComentarios(int menuId)
    {
        NavigationManager.NavigateTo($"/Comentarios/{menuId}");
    }
    public void IrRegistroMenu(int menuId)
    {
        NavigationManager.NavigateTo($"/RegistroMenu/{menuId}");
    }
}
